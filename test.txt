[ScoredSequenceSimulation(dataclass_name='ScoredSequenceSimulation', simulation=SequenceSimulation(dataclass_name='SequenceSimulation', tokens=['ac', '.', 'ms', '.', 'gov', ' or', ' ms', 'state', '.', 'edu', '.', '\n', 'US', 'M', ' Sec', 'ures', ' Grant', ' for', ' i', '.'], expected_activations=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None), true_activations=tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8220, 0.0000, 0.0000,
        0.0000, 0.0000]), ev_correlation_score=nan, rsquared_score=4.862538949268469e-08, absolute_dev_explained_score=-1.8127437551029857e-08), ScoredSequenceSimulation(dataclass_name='ScoredSequenceSimulation', simulation=SequenceSimulation(dataclass_name='SequenceSimulation', tokens=['<|endoftext|>', ' non', '-', 'J', 'oss', ' shows'], expected_activations=[0.0, 8.5, 8.5, 0.0, 0.0, 0.0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None), true_activations=tensor([0.0000, 3.5211, 0.0000, 0.0000, 0.0000, 0.0000]), ev_correlation_score=0.6324555320336761, rsquared_score=-6.826799854333551, absolute_dev_explained_score=-2.82800197986684)]